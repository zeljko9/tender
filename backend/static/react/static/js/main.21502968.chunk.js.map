{"version":3,"sources":["components/login.js","components/createAccount.js","components/keyWords.js","components/mainPage.js","components/forgottenPassword.js","components/newPassword.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["Login","inputEmailChanged","bind","inputPasswordChanged","btnCreateAccountClicked","btnLoginClicked","btnForgottenPasswordClicked","inputLoginEnterPressed","state","inputEmailValue","inputPasswordValue","e","this","setState","target","value","window","location","replace","keyCode","which","className","Input","onChange","type","placeholder","onKeyPress","onClick","href","React","Component","CreateAccount","inputCompanyNameChanged","inputRetypePasswordChanged","btnCaClicked","inputRetypePasswordEnterPressed","inputCompanyNameValue","inputRetypePasswordValue","align","inputpasswordValue","KeyWords","addKeyword","inputKeywordChanged","inputKeywordEnterPressed","inputKeywordValue","props","onKeyWordAdded","inputClassname","isProfile","style","margin","marginTop","keyWordsList","map","keyWord","key","iconCancelKeywordClicked","tableTenderTh","MainPage","onBtnCountPagClicked","getOffers","pageChanged","tableTenderThClicked","onProfileTabClicked","tableData","name","prezime","godina","narucilac","status","datum","count","pageCount","selectedPage","sortBy","isAsc","axios","get","params","keyWords","page","then","response","console","log","request","catch","err","tmpKeyWordsList","push","splice","id","span","el","data-field","data","Pagination","ForgottenPassword","btnFpClicked","NewPassword","inputRPasswordChanged","btnNpClicked","inputRPasswordValue","Profile","btnResetPassClicked","action","defaultChecked","App","isMainPageSelected","includes","minWidth","exact","path","render","copyrights","links","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.21502968.chunk.js","sourcesContent":["import React from 'react';\r\nimport './login.css';\r\nimport { Container , Row, Col, Card, Button } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\n\r\nclass Login extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.inputEmailChanged = this.inputEmailChanged.bind(this);\r\n        this.inputPasswordChanged = this.inputPasswordChanged.bind(this);\r\n        this.btnCreateAccountClicked = this.btnCreateAccountClicked.bind(this);\r\n        this.btnLoginClicked = this.btnLoginClicked.bind(this);\r\n        this.btnForgottenPasswordClicked = this.btnForgottenPasswordClicked.bind(this);\r\n        this.inputLoginEnterPressed = this.inputLoginEnterPressed.bind(this);\r\n\r\n        this.state = {\r\n            inputEmailValue: \"\",\r\n            inputPasswordValue: \"\"\r\n        }\r\n    }\r\n\r\n    inputEmailChanged(e) {\r\n        this.setState({inputEmailValue: e.target.value})\r\n    }\r\n\r\n    inputPasswordChanged(e) {\r\n        this.setState({inputPasswordValue: e.target.value})\r\n    }\r\n    btnCreateAccountClicked(){\r\n        window.location.replace('/createAccount')\r\n    }\r\n\r\n    btnForgottenPasswordClicked(){\r\n        window.location.replace('/forgottenPassword')\r\n    }\r\n     \r\n    btnLoginClicked(){\r\n        //TODO: smisli lepse ime umesto mainPage\r\n        window.location.replace('/mainPage')\r\n    }\r\n\r\n    inputLoginEnterPressed(e){\r\n        let code = e.keyCode || e.which;\r\n        if (code === 13) {\r\n            this.btnLoginClicked()\r\n        }\r\n    }\r\n\r\n    //TODO: slogan prebaci na eng\r\n    render(){\r\n        return (\r\n            <Container className = \"loginContainer\">\r\n                <Row className=\"loginRow\">\r\n                    <Col className=\"offset-m2 s12 m8 l5 xl6\">\r\n                        <p className = \"slogan\">SVE NABAVKE NA JEDNOM MESTU</p>\r\n                    </Col>\r\n                    <Col className=\"offset-m2 s12 m8 l7 xl5\">\r\n                        <Card className = \"cardLogin\">\r\n                            <Row>\r\n                                <Col className = \"inputEmailContainer s12\">\r\n                                    <Input onChange={this.inputEmailChanged}\r\n                                            value={this.state.inputEmailValue}\r\n                                            type=\"email\"\r\n                                            className = \"inputStyle\"\r\n                                            placeholder = \"Email address\"\r\n                                            onKeyPress={this.inputLoginEnterPressed}\r\n                                    ></Input>\r\n                                </Col>\r\n                                <Col className = \"inputPasswordContainer s12\">\r\n                                    <Input onChange={this.inputPasswordChanged}\r\n                                            value={this.state.inputPasswordValue}\r\n                                            type=\"password\"\r\n                                            className = \"inputStyle\"\r\n                                            placeholder = \"Password\"\r\n                                            onKeyPress={this.inputLoginEnterPressed}\r\n                                    ></Input>\r\n                                </Col>\r\n                                <Col className = \"btnLoginContainer s12\">\r\n                                    <Button className = \"btnLogin red\" onClick={this.btnLoginClicked}>\r\n                                        Login\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col className = \"fPassContainer s12\">\r\n                                    <a className = \"fPass\" href=\"/forgottenPassword\">Forgotten password?</a>\r\n                                </Col>\r\n                                <Col className = \"hLineContainer s12\">\r\n                                    <hr className = \"hLine\"></hr>\r\n                                </Col>\r\n                                <Col className = \"btnRegisterContainer s12\">\r\n                                    <Button className = \"btnRegister grey\" onClick = {this.btnCreateAccountClicked}>\r\n                                        Create account\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './createAccount.css';\r\nimport { Container , Row, Col, Card, Button } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\n\r\n//ca = create account\r\n//TODO: dodaj pib (broj), kontakt telefona\r\n////TODO: mini objasnjenja pojmova na sajtu\r\nclass CreateAccount extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.inputEmailChanged = this.inputEmailChanged.bind(this);\r\n        this.inputPasswordChanged = this.inputPasswordChanged.bind(this);\r\n        this.inputCompanyNameChanged = this.inputCompanyNameChanged.bind(this);\r\n        this.inputRetypePasswordChanged = this.inputRetypePasswordChanged.bind(this);\r\n        this.btnCaClicked = this.btnCaClicked.bind(this);\r\n        this.inputRetypePasswordEnterPressed = this.inputRetypePasswordEnterPressed.bind(this);\r\n\r\n        this.state = {\r\n            inputCompanyNameValue: \"\",\r\n            inputEmailValue: \"\",\r\n            inputPasswordValue: \"\",\r\n            inputRetypePasswordValue: \"\"\r\n        }\r\n    }\r\n\r\n    inputCompanyNameChanged(e) {\r\n        this.setState({inputCompanyNameValue: e.target.value})\r\n    }\r\n\r\n    inputEmailChanged(e) {\r\n        this.setState({inputEmailValue: e.target.value})\r\n    }\r\n\r\n    inputPasswordChanged(e) {\r\n        this.setState({inputPasswordValue: e.target.value})\r\n    }\r\n    inputRetypePasswordChanged(e) {\r\n        this.setState({inputRetypePasswordValue: e.target.value})\r\n    }\r\n\r\n    btnCaClicked(){\r\n        window.location.replace('/')\r\n    }\r\n\r\n    inputRetypePasswordEnterPressed(e){\r\n        let code = e.keyCode || e.which;\r\n        if (code === 13) {\r\n            this.btnCreateAccountClicked()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container className = \"caContainer\">\r\n                <Row className=\"caRow\">\r\n                    <Col className=\"offset-xl2 s12 m8 l7 xl8\">\r\n                        <Card className = \"cardCa\">\r\n                            <Row>\r\n                                <h5>Napravite nalog</h5>\r\n                                <Col className=\"offset-s1\">\r\n                                    <Col className = \"labelCompanyNameContainer s10\">\r\n                                        <p align=\"left\" className=\"caLabel\">Ime kompanije</p>\r\n                                    </Col>\r\n                                    <Col className = \"inputCompanyNameContainer s10\">\r\n                                        <Input onChange={this.inputCompanyNameChanged}\r\n                                                value={this.state.inputCompanyNameValue}\r\n                                                type=\"text\"\r\n                                                className = \"inputStyle\"\r\n                                                placeholder = \"Ime kompanije\"\r\n                                        ></Input>\r\n                                    </Col>\r\n                                    <Col className = \"labelEmailContainer s10\">\r\n                                        <p align=\"left\" className=\"caEmailLabel\">Email</p>\r\n                                    </Col>\r\n                                    <Col className = \"inputEmailContainer s10\">\r\n                                        <Input onChange={this.inputEmailChanged}\r\n                                                value={this.state.inputEmailValue}\r\n                                                type=\"text\"\r\n                                                className = \"inputStyle\"\r\n                                                placeholder = \"Email\"\r\n                                                onKeyPress={this.inputLoginEnterPressed}\r\n                                        ></Input>\r\n                                    </Col>\r\n                                    <Col className = \"labelEmailContainer s10\">\r\n                                        <p align=\"left\" className=\"caEmailLabel caLabel\">Sifra</p>\r\n                                    </Col>\r\n                                    <Col className = \"inputEmailContainer s10\">\r\n                                        <Input onChange={this.inputPasswordChanged}                                   \r\n                                            value={this.state.inputpasswordValue}\r\n                                            type=\"password\"\r\n                                            className = \"inputStyle\"\r\n                                            placeholder = \"Sifra\"\r\n                                        ></Input>\r\n                                    </Col>\r\n                                    <Col className = \"labelEmailContainer s10\">\r\n                                        <p align=\"left\" className=\"caEmailLabel caLabel\">Ponovite sifru</p>\r\n                                    </Col>\r\n                                    <Col className = \"inputPasswordContainer s10\">\r\n                                        <Input onChange={this.inputRetypePasswordChanged}\r\n                                                value={this.state.inputRetypePasswordValue}\r\n                                                type=\"password\"\r\n                                                className = \"inputStyle\"\r\n                                                placeholder = \"Ponovite sifru\"\r\n                                                onKeyPress={this.inputRetypePasswordEnterPressed}\r\n                                        ></Input>\r\n                                    </Col>\r\n                                </Col>\r\n                                <Col className = \"btnCaContainer s12\">\r\n                                    <Button className = \"btnCa red center-align s3\" onClick={this.btnCaClicked}>\r\n                                        Napravi nalog\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateAccount;","import React from 'react';\r\nimport './keyWords.css';\r\nimport { Container , Row, Col, Card, Button } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\n\r\n//ca = create account\r\nclass KeyWords extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.addKeyword = this.addKeyword.bind(this)\r\n        this.inputKeywordChanged = this.inputKeywordChanged.bind(this)\r\n        this.inputKeywordEnterPressed = this.inputKeywordEnterPressed.bind(this)\r\n        this.state ={\r\n            inputKeywordValue: \"\"\r\n        }\r\n    }\r\n\r\n    inputKeywordChanged(e) {\r\n        this.setState({inputKeywordValue: e.target.value})\r\n    }\r\n\r\n    addKeyword(){\r\n        if (this.state.inputKeywordValue !== \"\") {\r\n            this.props.onKeyWordAdded(this.state.inputKeywordValue)\r\n            this.setState({\r\n                inputKeywordValue: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    inputKeywordEnterPressed(e){\r\n        let code = e.keyCode || e.which;\r\n        if (code === 13) {\r\n           this.addKeyword()\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let inputClassname = this.props.isProfile ? \"s4 kwInput\" : \"s2 kwInput\"\r\n        return (\r\n            <div>\r\n                 <Col className=\"s12 keyWordsInputContainer valign-wrapper\">\r\n                    <Col className={inputClassname}>\r\n                      <Input onChange={this.inputKeywordChanged}\r\n                              value={this.state.inputKeywordValue}\r\n                              type=\"text\"\r\n                              className = \"inputStyle inputKeyword\"\r\n                              placeholder = \"Dodaj kljucnu rec\"\r\n                              onKeyPress={this.inputKeywordEnterPressed}>\r\n                      </Input>\r\n                    </Col>\r\n                    <Col className=\"s1 btnAddKeywordContainer\" style = {{margin: 0}}>\r\n                      <Button className = \"btnAddKeyword red\" onClick={this.addKeyword}>\r\n                          Dodaj\r\n                      </Button>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col className=\"s12 keyWordsContainer\">\r\n                    <Col className=\"s10\" style={{marginTop: \"10px\"}}>\r\n                        <div className=\"keyWordCardsContainer\">\r\n                        {this.props.keyWordsList.map((keyWord, key) => \r\n                            <Card key = {key} className = \"keyWordCard\">\r\n                                <p className = \"pKeyWord\">{keyWord}</p>\r\n                                <a href=\"#\" className = \"cancelKeyWord\"onClick={() => this.props.iconCancelKeywordClicked(key)}><i className=\"material-icons cancelKeyWordIcon\">close</i></a>\r\n                            </Card>\r\n                        )}\r\n                        </div>\r\n                    </Col>\r\n                  </Col>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KeyWords;","import React from 'react';\r\nimport { Button, Card, Col, Row, Table } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\nimport './mainPage.css';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport KeyWords from \"./keyWords\";\r\n\r\n//kw = keyword\r\n\r\n//TODO: username strana\r\n\r\nconst tableTenderTh = [\"Link\",\r\n  \"Pdf\",\r\n  \"Narucilac\",\r\n  \"Naziv postupka\",\r\n  \"Status\",\r\n  \"Datum objave\",\r\n  \"Rok\",\r\n  \"Budzet\"]\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.onBtnCountPagClicked = this.onBtnCountPagClicked.bind(this);\r\n        this.getOffers = this.getOffers.bind(this);\r\n        this.pageChanged = this.pageChanged.bind(this);\r\n        this.tableTenderThClicked = this.tableTenderThClicked.bind(this);\r\n        this.onProfileTabClicked = this.onProfileTabClicked.bind(this);\r\n        this.onKeyWordAdded = this.onKeyWordAdded.bind(this);\r\n        this.iconCancelKeywordClicked = this.iconCancelKeywordClicked.bind(this)\r\n\r\n        this.state = {\r\n          inputKeywordValue: \"\",\r\n          tableData:[{name: \"lazar\", prezime: \"minic\", godina: \"2019.\", narucilac: \"Lazar  kompani\", status: \"Objavljen\", datum: \"12.3.2019.\"},\r\n          {name: \"laza\", prezime: \"mini\", godina: \"2019.\", narucilac: \"Lazar  kompani\", status: \"Objavljen\", datum: \"12.3.2019.\"},\r\n          {name: \"laz\", prezime: \"min\", godina: \"2019.\", narucilac: \"Lazar  kompani\", status: \"Objavljen\", datum: \"12.3.2019.\"},\r\n          {name: \"la\", prezime: \"min\", godina: \"2019.\", narucilac: \"Lazar  kompani\", status: \"Objavljen\", datum: \"12.3.2019.\"},],\r\n          keyWordsList: [\"prvi\", \"drugij vec malo duzi\",\"jhfyjf hhg  gghd gh dd gdgdgh hgdgtdghdghd  gd hd ghfdg d\",\"jvfjh gcfghfcg\", \"hkvfjghc\"],\r\n          count: 5,\r\n          pageCount: 20,\r\n          selectedPage: 1,\r\n          sortBy: \"\",\r\n          isAsc: true\r\n        }\r\n    }\r\n\r\n    onBtnCountPagClicked(count){\r\n      this.setState({\r\n        count: count\r\n      })\r\n    }\r\n\r\n    getOffers(){\r\n      axios.get('https://jsonplaceholder.typicode.com/posts',{\r\n        params: { \r\n          keyWords: this.state.keyWordsList,\r\n          page: this.state.selectedPage,\r\n          sortBy: this.state.sortBy,\r\n          isAsc: this.state.isAsc\r\n         }\r\n      })\r\n      .then((response) => console.log(response.request))\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    pageChanged(page){\r\n      this.setState({selectedPage: page}, this.getOffers)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getOffers()\r\n    }\r\n\r\n    tableTenderThClicked(sortBy){\r\n        this.setState({\r\n          isAsc: !this.state.isAsc,\r\n          sortBy: sortBy\r\n        }, this.getOffers)\r\n    }\r\n\r\n    onProfileTabClicked(){\r\n      window.location.replace('/profile')\r\n    }\r\n\r\n    onKeyWordAdded(keyWord){\r\n      let tmpKeyWordsList = this.state.keyWordsList\r\n      tmpKeyWordsList.push(keyWord)\r\n      this.setState({\r\n          keyWordsList: tmpKeyWordsList\r\n      })\r\n    }\r\n\r\n    iconCancelKeywordClicked(key){\r\n      let tmpKeyWordsList = this.state.keyWordsList\r\n      tmpKeyWordsList.splice(key, 1)\r\n      this.setState({\r\n          keyWordsList: tmpKeyWordsList\r\n      })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div>\r\n            <nav>\r\n              <div className=\"nav-wrapper\">\r\n                <a href=\"#\" className=\"brand-logo\">Tender</a>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                  <li><a href=\"#\"><i className=\"material-icons\">home</i></a></li>\r\n                  <li onClick={this.onProfileTabClicked}><a href=\"#\">Profile</a></li>\r\n                  <li><a href=\"#\">Log out</a></li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n            <Row className = \"\">\r\n                <Col className=\"offset-s1 s10 mainPageContainer\">\r\n                  <Col className=\"offset-s1 s12\">\r\n                    <KeyWords onKeyWordAdded={this.onKeyWordAdded} iconCancelKeywordClicked = {this.iconCancelKeywordClicked} keyWordsList = {this.state.keyWordsList}></KeyWords>\r\n                  </Col>\r\n                  <Col className=\"offset-s1 s10 tenderTableContainer\">\r\n                    <Table className = \"tenderTable\">\r\n                      <colgroup>\r\n                        <col span=\"1\" className = \"col1\"></col>\r\n                        <col span=\"1\" className = \"col2\"></col>\r\n                        <col span=\"1\" className = \"col3\"></col>\r\n                        <col span=\"1\" className = \"col4\"></col>\r\n                        <col span=\"1\" className = \"col5\"></col>\r\n                        <col span=\"1\" className = \"col6\"></col>\r\n                      </colgroup>\r\n                      <thead>\r\n                        <tr>\r\n                          {tableTenderTh.map((el, key) => \r\n                            <th key={key} data-field={el} onClick={()=> this.tableTenderThClicked(el)}>\r\n                              <div className=\"thDataContainer\">\r\n                                {el}\r\n                                {this.state.sortBy === el ? \r\n                                (this.state.isAsc === true ? <a><i className=\"sortArrow material-icons\">arrow_downward</i></a> : <a><i className=\"sortArrow material-icons\">arrow_upward</i></a>) \r\n                                : null}\r\n                              </div>\r\n                            </th>\r\n                          )}  \r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {this.state.tableData.map((data, key) => \r\n                          <tr key = {key}>\r\n                            <td>{data.name}</td>\r\n                            <td>{data.prezime}</td>\r\n                            <td>{data.godina}</td>\r\n                            <td>{data.narucilac}</td>\r\n                            <td>{data.status}</td>\r\n                            <td>{data.datum}</td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n                  <Col className=\"offset-s1 s10 paginationContainer\">\r\n                    <Col className=\"s7 pagPageContainer\">\r\n                        <Pagination count = {this.state.pageCount}  className = \"pagPage\" onChange = {(e, page) => {this.pageChanged(page)}}></Pagination>\r\n                      </Col>\r\n                  </Col>\r\n                </Col>\r\n            </Row>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n/*\r\n<Col className=\"s5 pagCountBtnContainer\">\r\n                      <div className=\"\">\r\n                        <Button style = {{backgroundColor: this.state.count === 5 ? \"red\" : \"white\"}} className = \"btnCountPag\" id = \"btnCountPag5\" onClick = {()=> this.onBtnCountPagClicked(5)}>5</Button>\r\n                        <Button style = {{backgroundColor: this.state.count === 10 ? \"red\" : \"white\"}} className = \"btnCountPag\"  id = \"btnCountPag10\" onClick = {()=> this.onBtnCountPagClicked(10)}>10</Button>\r\n                        <Button style = {{backgroundColor: this.state.count === 20 ? \"red\" : \"white\"}} className = \"btnCountPag\"  id = \"btnCountPag20\" onClick = {()=> this.onBtnCountPagClicked(20)}>20</Button>\r\n                      </div>\r\n                    </Col> */\r\nexport default MainPage;","import React from 'react';\r\nimport { Button, Col, Container, Row } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\nimport './mainPage.css';\r\n\r\n//fp = forgotten password\r\n\r\nclass ForgottenPassword extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.inputEmailChanged = this.inputEmailChanged.bind(this);\r\n        this.btnFpClicked = this.btnFpClicked.bind(this);\r\n\r\n        this.state = {\r\n            inputEmailValue: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    inputEmailChanged(e) {\r\n        this.setState({inputEmailValue: e.target.value})\r\n    }\r\n    btnFpClicked(){\r\n        window.location.replace('/newPassword')\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className = \"s12\">\r\n                        <h5>Zaboravljena lozinka?</h5>\r\n                    </Col>\r\n                    <Col className = \"fpInputEmailContainer offset-m1 offset-l2  offset-xl3 s12 m10 l8 xl6\">\r\n                        <Input onChange={this.inputEmailChanged}\r\n                                value={this.state.inputEmailValue}\r\n                                type=\"email\"\r\n                                className = \"inputStyle fpInputEmail\" //koristim ovu klasu da ne bi pisao duplo kod za stilizovanje input-a\r\n                                placeholder = \"Email address\"\r\n                        ></Input>\r\n                     </Col>\r\n                     <Col  className = \"s12\">\r\n                        <Button className = \"btnFp grey\" onClick={this.btnFpClicked}>\r\n                            Pretrazi\r\n                        </Button>\r\n                     </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgottenPassword;","import React from 'react';\r\nimport { Button, Col, Container, Row } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\nimport './mainPage.css';\r\n\r\n//np = new password\r\n//RPassword = repeated password\r\n\r\nclass NewPassword extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.inputPasswordChanged = this.inputPasswordChanged.bind(this);\r\n        this.inputRPasswordChanged = this.inputRPasswordChanged.bind(this);\r\n        this.btnNpClicked = this.btnNpClicked.bind(this);\r\n\r\n        this.state = {\r\n            inputPasswordValue: \"\",\r\n            inputRPasswordValue: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    inputPasswordChanged(e) {\r\n        this.setState({inputPasswordValue: e.target.value})\r\n    }\r\n    \r\n    inputRPasswordChanged(e) {\r\n        this.setState({inputRPasswordValue: e.target.value})\r\n    }\r\n    btnNpClicked(){\r\n        window.location.replace('/')\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className = \"s12\">\r\n                        <h5>Unesite novu šifru</h5>\r\n                    </Col>\r\n                    <Col className = \"npInputPasswordContainer  offset-m1 offset-l2  offset-xl3 s12 m10 l8 xl6\">\r\n                        <Input onChange={this.inputPasswordChanged}\r\n                                value={this.state.inputPasswordValue}\r\n                                type=\"password\"\r\n                                className = \"inputStyle\"\r\n                                placeholder = \"Nova sifra\"\r\n                        ></Input>\r\n                     </Col>\r\n                     <Col className = \"npInputRPasswordContainer  offset-m1 offset-l2  offset-xl3 s12 m10 l8 xl6\">\r\n                        <Input onChange={this.inputRPasswordChanged}\r\n                                value={this.state.inputRPasswordValue}\r\n                                type=\"password\"\r\n                                className = \"inputStyle\"\r\n                                placeholder = \"Ponovite novu sifru\"\r\n                        ></Input>\r\n                     </Col>\r\n                     <Col  className = \"s12\">\r\n                        <Button className = \"btnNp red\" onClick={this.btnNpClicked}>\r\n                            Promeni\r\n                        </Button>\r\n                     </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewPassword;","import React from 'react';\r\nimport './profile.css';\r\nimport { Container , Row, Col, Card, Button } from 'react-materialize';\r\nimport { Input } from 'reactstrap';\r\nimport KeyWords from \"./keyWords\";\r\n\r\n//ca = create account\r\nclass Profile extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.inputEmailChanged = this.inputEmailChanged.bind(this);\r\n        this.inputPasswordChanged = this.inputPasswordChanged.bind(this);\r\n        this.inputCompanyNameChanged = this.inputCompanyNameChanged.bind(this);\r\n        this.inputRetypePasswordChanged = this.inputRetypePasswordChanged.bind(this);\r\n        this.btnCaClicked = this.btnCaClicked.bind(this);\r\n        this.inputRetypePasswordEnterPressed = this.inputRetypePasswordEnterPressed.bind(this);\r\n        this.onKeyWordAdded = this.onKeyWordAdded.bind(this);\r\n        this.iconCancelKeywordClicked = this.iconCancelKeywordClicked.bind(this)\r\n        this.btnResetPassClicked = this.btnResetPassClicked.bind(this)\r\n\r\n        this.state = {\r\n            inputCompanyNameValue: \"\",\r\n            inputEmailValue: \"\",\r\n            inputPasswordValue: \"\",\r\n            inputRetypePasswordValue: \"\",\r\n            keyWordsList: [\"prvi\", \"drugij vec malo duzi\",\"jh tdghdghd  gd hd ghfdg d\",\"jvfjh gcfghfcg\", \"hkvfjghc\"],\r\n        }\r\n    }\r\n\r\n    inputCompanyNameChanged(e) {\r\n        this.setState({inputCompanyNameValue: e.target.value})\r\n    }\r\n\r\n    inputEmailChanged(e) {\r\n        this.setState({inputEmailValue: e.target.value})\r\n    }\r\n\r\n    inputPasswordChanged(e) {\r\n        this.setState({inputPasswordValue: e.target.value})\r\n    }\r\n    inputRetypePasswordChanged(e) {\r\n        this.setState({inputRetypePasswordValue: e.target.value})\r\n    }\r\n\r\n    btnCaClicked(){\r\n        window.location.replace('/')\r\n    }\r\n\r\n    inputRetypePasswordEnterPressed(e){\r\n        let code = e.keyCode || e.which;\r\n        if (code === 13) {\r\n            this.btnCreateAccountClicked()\r\n        }\r\n    }\r\n\r\n    onKeyWordAdded(keyWord){\r\n        let tmpKeyWordsList = this.state.keyWordsList\r\n        tmpKeyWordsList.push(keyWord)\r\n        this.setState({\r\n            keyWordsList: tmpKeyWordsList\r\n        })\r\n    }\r\n\r\n    iconCancelKeywordClicked(key){\r\n        let tmpKeyWordsList = this.state.keyWordsList\r\n        tmpKeyWordsList.splice(key, 1)\r\n        this.setState({\r\n            keyWordsList: tmpKeyWordsList\r\n        })\r\n    }\r\n\r\n    btnResetPassClicked(){\r\n        window.location.replace('/forgottenPassword')\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Container className = \"caContainer\">\r\n                <Row className=\"caRow\">\r\n                    <Col className=\"offset-xl2 s12 m11 l11 xl8\">\r\n                        <Card className = \"cardCa\">\r\n                            <Row>\r\n                                <h5>Profil</h5>\r\n                                <Col className=\"offset-s1 s11\">\r\n                                    <Col className = \"labelCompanyNameContainer s10\">\r\n                                        <p align=\"left\" className=\"caLabel tLabel\">Ime kompanije</p>\r\n                                    </Col>\r\n                                    <Col className = \"inputCompanyNameContainer s10\">\r\n                                        <Input onChange={this.inputCompanyNameChanged}\r\n                                                value={this.state.inputCompanyNameValue}\r\n                                                type=\"text\"\r\n                                                className = \"inputStyle\"\r\n                                                placeholder = \"Ime kompanije\"\r\n                                        ></Input>\r\n                                    </Col>\r\n                                    <Col className = \"labelCompanyNameContainer s10\">\r\n                                        <p align=\"left\" className=\"caLabel tLabel\">Kljucne reci</p>\r\n                                    </Col>\r\n                                    <Col className = \"s12 pKwContainer\">\r\n                                        <KeyWords onKeyWordAdded={this.onKeyWordAdded} isProfile={true}\r\n                                            iconCancelKeywordClicked = {this.iconCancelKeywordClicked} \r\n                                            keyWordsList = {this.state.keyWordsList}></KeyWords>\r\n                                    </Col>\r\n                                    <Col className = \"labelCompanyNameContainer s10\">\r\n                                        <p align=\"left\" className=\"caLabel tLabel\">Email pretplata</p>\r\n                                    </Col>\r\n                                    <Col className=\"s12\">\r\n                                        <form action=\"#\" className=\"profileRadioButtonsContainer\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input className=\"with-gap\" name=\"rbSubscription\" type=\"radio\" defaultChecked />\r\n                                                    <span>Dnevno</span>\r\n                                                </label>\r\n                                            </p>\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input className=\"with-gap\" name=\"rbSubscription\" type=\"radio\"/>\r\n                                                    <span>Nedeljno</span>\r\n                                                </label>\r\n                                            </p>\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input className=\"with-gap\" name=\"rbSubscription\" type=\"radio\" />\r\n                                                    <span>Mesecno</span>\r\n                                                </label>\r\n                                            </p>\r\n                                            \r\n                                        </form>\r\n                                    </Col>\r\n                                </Col> \r\n                                <Col className = \"pResetPassContainer offset-s1 s11 valign-wrapper\">\r\n                                        <p className=\"labelResetPass\">Resetuj sifru</p>\r\n                                        <Button className = \"red center-align s3\" onClick={this.btnResetPassClicked}>\r\n                                            Promeni sifru\r\n                                        </Button>\r\n                                </Col>\r\n                                <Col className = \"btnCaContainer s12\">\r\n                                    <Button className = \"btnCa red center-align s3\" onClick={this.btnCaClicked}>\r\n                                        Sacuvaj\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Login from './components/login'\r\nimport CreateAccount from './components/createAccount'\r\nimport MainPage from \"./components/mainPage\";\r\nimport ForgottenPassword  from \"./components/forgottenPassword\";\r\nimport NewPassword from \"./components/newPassword\";\r\nimport Profile from \"./components/profile\"\r\nimport { Footer } from 'react-materialize';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      isMainPageSelected: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    \r\n  }\r\n\r\n  render() {\r\n    let isMainPageSelected = window.location.href.includes(\"mainPage\")\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\" style={{minWidth: isMainPageSelected ? \"1000px\" : \"0\"}}>\r\n          <Route exact path = '/' render={() => <Login />}/>\r\n          <Route exact path = '/createAccount' render={() => <CreateAccount />}/>\r\n          <Route exact path = '/mainPage' render={() => <MainPage />}/>\r\n          <Route exact path = '/forgottenPassword' render={() => <ForgottenPassword />}/>\r\n          <Route exact path = '/newPassword' render={() => <NewPassword />}/>\r\n          <Route exact path = '/profile' render={() => <Profile />}/>\r\n            <Footer className=\"footer\" copyrights=\"© 2020 Copyright Text\"\r\n              links={\r\n                <ul>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\r\n                  <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\r\n                </ul>\r\n              }>\r\n              <h5 className=\"white-text\">Footer Content</h5>\r\n              <p className=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\r\n          </Footer>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}